name: Python application

on:
  push:
    branches:
      - main  # 或者你的默认分支名

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install pyautogui
        pip install keyboard
        pip install python-xlib
      shell: bash

    - name: Build executables
      run: |
        for file in *.pyw; do
          pyinstaller --onefile --name "${file%.*}" --icon "${file%.*}.ico" "$file"
        done
      shell: bash

    - name: Move executables
      run: |
        mkdir action-generate
        mv ./dist/*.exe ./action-generate/
      shell: bash

    - name: Upload executables
      uses: actions/upload-artifact@v2
      with:
        name: executables
        path: ./action-generate/*.exe

    - name: Check if Release Tag Exists and Create if not
      run: |
        # 获取本次操作的commit的SHA值
        COMMIT_SHA=$(git rev-parse HEAD)

        # 检查是否存在名为'action'的release tag
        RELEASE_ID=$(curl -s -H "Authorization: token $PAT" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/action | jq -r .id)

        # 如果不存在，则创建一个新的release
        if [ "$RELEASE_ID" == "null" ]; then
          RELEASE_ID=$(curl -s -X POST -H "Authorization: token $PAT" \
            -d '{
            "tag_name": "action",
            "target_commitish": "'$COMMIT_SHA'",
            "name": "'$COMMIT_SHA'",
            "draft": false,
            "prerelease": true
          }' https://api.github.com/repos/$GITHUB_REPOSITORY/releases | jq -r .id)
        fi

        # 将生成的exe文件上传到这个release中
        for file in ./action-generate/*.exe; do
          curl -s -X POST -H "Authorization: token $PAT" \
            -H "Content-Type: $(file -b --mime-type $file)" \
            --data-binary @$file \
            "https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID/assets?name=$(basename $file)"
        done
      shell: bash
      env:
        PAT: ${{ secrets.PAT }}
